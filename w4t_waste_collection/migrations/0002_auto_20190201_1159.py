# Generated by Django 2.0 on 2019-02-01 10:59

from django.db import migrations, models
import django.db.models.deletion
import django_orion_model.fields


class Migration(migrations.Migration):

    dependencies = [
        ('django_orion_model', '0001_initial'),
        ('w4t_waste_collection', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AgentCollection',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('name', django_orion_model.fields.OrionCharField(help_text="Waste Name. Example 'Green glass bottle'", max_length=1024)),
                ('description', django_orion_model.fields.OrionTextField(blank=True, help_text="Waste help_text. Example 'Bottle made of green glass'")),
                ('refCategory', django_orion_model.fields.OrionRef(help_text='Reference to category entity this belongs. Example [wastecategory:9[]')),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='ResourceCategory',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('name', django_orion_model.fields.OrionCharField(blank=True, help_text="WasteCategory Name. Example 'Glass bottles'", max_length=1024)),
                ('description', django_orion_model.fields.OrionTextField(blank=True, help_text="WasteCategory description. Example 'Glass bottles including whiteand green glass'", max_length=1024)),
                ('ref_resources', django_orion_model.fields.OrionRefList(help_text='List of waste entities composing the ResourceCategory. Example [waste:6, waste:18]', size=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='ResourceCollection',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('name', django_orion_model.fields.OrionCharField(blank=True, help_text="SortingType Name. Example 'Color Glass collection'", max_length=1024)),
                ('description', django_orion_model.fields.OrionTextField(blank=True, help_text="SortingType description. Example 'Collection of colored glass bottles'", max_length=1024)),
                ('regulation', django_orion_model.fields.OrionCharField(blank=True, max_length=1024)),
                ('refResources', django_orion_model.fields.OrionRefList(help_text='List of waste entities composing the SortingType. Example [waste:6, waste18]', size=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('refEmitter', django_orion_model.fields.OrionRef(blank=True, help_text="Transaction's emitter entity containing an Agent ID.")),
                ('refReceiver', django_orion_model.fields.OrionRef(help_text="Transaction's receiver entity containing an Agent ID.")),
                ('refCapturer', django_orion_model.fields.OrionRef(blank=True, help_text='Reference to the Id of the Device entity if exists, that captured the transaction containing an Agent ID..')),
                ('date', django_orion_model.fields.OrionDateTimeField(help_text='Timestamp which represents when the transaction was made')),
                ('emittedResources', django_orion_model.fields.OrionListField(help_text='JSON ARRAY [{ refResource : resourceID_X , amount : amount1 , unit : KGM , ...},{ refResource : resourceID_X , amount : amount2 , unit : KGM , ... },... ]', size=None)),
                ('receivedResources', django_orion_model.fields.OrionListField(help_text="JSON ARRAY [{ refResource : resourceID_X , amount : amount1 , unit : 'KGM' , ... },{ refResource : resourceID_X , amount : amount2 , unit :'KGM' , ... },... ]", size=None)),
                ('incorrect', django_orion_model.fields.OrionDateTimeField(blank=True, help_text='Default to null or nor existing. In order not to delete any transaction, If one is incorrect to mark it as incorrect and do not use it in calculations. But keep it in the database to know.')),
                ('incorrectReason', django_orion_model.fields.OrionTextField(blank=True, help_text="Explanation if necessary of what it is incorrect or what changes have been handmade.For example: 'Bad transaction because of sensor error , refEmitter has been manually changed from citizen:31 to citizen:523' , etc")),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='TreatmentPlant',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('location', django_orion_model.fields.OrionCoordinatesField(blank=True, size=None)),
                ('address', django_orion_model.fields.OrionTextField(blank=True)),
                ('name', django_orion_model.fields.OrionCharField(max_length=1024)),
                ('refType', django_orion_model.fields.OrionRef()),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.CreateModel(
            name='TreatmentPlantType',
            fields=[
                ('orionentity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_orion_model.OrionEntity')),
                ('family', django_orion_model.fields.OrionCharField(blank=True, max_length=100)),
                ('name', django_orion_model.fields.OrionCharField(max_length=1024)),
                ('refInputs', django_orion_model.fields.OrionRefList(size=None)),
                ('refOutputs', django_orion_model.fields.OrionRefList(size=None)),
            ],
            options={
                'abstract': False,
            },
            bases=('django_orion_model.orionentity',),
        ),
        migrations.RemoveField(
            model_name='wastemanagementstage',
            name='orionentity_ptr',
        ),
        migrations.RemoveField(
            model_name='depositpointtype',
            name='coordinates',
        ),
        migrations.RemoveField(
            model_name='depositpointtype',
            name='location',
        ),
        migrations.RemoveField(
            model_name='sortingtype',
            name='description',
        ),
        migrations.RemoveField(
            model_name='sortingtype',
            name='name',
        ),
        migrations.RemoveField(
            model_name='sortingtype',
            name='orionentity_ptr',
        ),
        migrations.RemoveField(
            model_name='sortingtype',
            name='ref_wastes',
        ),
        migrations.RemoveField(
            model_name='sortingtype',
            name='regulation',
        ),
        migrations.RemoveField(
            model_name='waste',
            name='description',
        ),
        migrations.RemoveField(
            model_name='waste',
            name='name',
        ),
        migrations.RemoveField(
            model_name='waste',
            name='orionentity_ptr',
        ),
        migrations.RemoveField(
            model_name='waste',
            name='ref_waste_category',
        ),
        migrations.RemoveField(
            model_name='waste',
            name='waste_code',
        ),
        migrations.RemoveField(
            model_name='wastecategory',
            name='description',
        ),
        migrations.RemoveField(
            model_name='wastecategory',
            name='name',
        ),
        migrations.RemoveField(
            model_name='wastecategory',
            name='orionentity_ptr',
        ),
        migrations.AddField(
            model_name='depositpoint',
            name='name',
            field=django_orion_model.fields.OrionCharField(default='', max_length=1024),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='depositpointisle',
            name='refDepositPoints',
            field=django_orion_model.fields.OrionRefList(default=[], size=None),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='depositpointisle',
            name='refType',
            field=django_orion_model.fields.OrionRef(default=''),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='depositpointtype',
            name='refInputs',
            field=django_orion_model.fields.OrionRefList(default=[], size=None),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='depositpointtype',
            name='refOutputs',
            field=django_orion_model.fields.OrionRefList(default=[], size=None),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sortingtype',
            name='shape',
            field=django_orion_model.fields.OrionCharField(blank=True, help_text='If the shape of the container is very relevant or representative for the sorting type (mainly for the sorting game) specify the shape of the container. Accepted values: the shapes provided by the sorting game.', max_length=1024),
        ),
        migrations.AddField(
            model_name='sortingtype',
            name='wasteCharacterization',
            field=django_orion_model.fields.OrionJSONField(blank=True, default={}, help_text='{wasteCategory_X : {amount: X, unit: KGM}, WasteCategory_Y : {amount: Y, unit: KGM}...}...}'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='sortingtype',
            name='wasteCharacterizationTime',
            field=django_orion_model.fields.OrionDateTimeField(blank=True, default='2011-10-05T14:48:00.000Z', help_text='Timestamp at which the wasteCharacterization field was updated'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='waste',
            name='definitionSource',
            field=django_orion_model.fields.OrionTextField(blank=True, help_text='Where this characterization comes from'),
        ),
        migrations.AddField(
            model_name='waste',
            name='wasteCode',
            field=django_orion_model.fields.OrionCharField(blank=True, help_text='LER waste code.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='depositpoint',
            name='refDevice',
            field=django_orion_model.fields.OrionRef(blank=True),
        ),
        migrations.AlterField(
            model_name='depositpoint',
            name='refSortingType',
            field=django_orion_model.fields.OrionRef(),
        ),
        migrations.AlterField(
            model_name='depositpoint',
            name='refType',
            field=django_orion_model.fields.OrionRef(),
        ),
        migrations.AlterField(
            model_name='depositpoint',
            name='serialNumber',
            field=django_orion_model.fields.OrionCharField(blank=True, max_length=1024),
        ),
        migrations.AlterField(
            model_name='sortingtype',
            name='annotations',
            field=django_orion_model.fields.OrionTextField(blank=True, help_text='Attribute reserved for annotations (incidences, remarks, etc.)', max_length=1024),
        ),
        migrations.AlterField(
            model_name='sortingtype',
            name='area_served',
            field=django_orion_model.fields.OrionCharField(blank=True, help_text='Higher level area to which the sorting type belongs to. It can be used to define the area where the sorting type is applied, etc.', max_length=1024),
        ),
        migrations.AlterField(
            model_name='sortingtype',
            name='color',
            field=django_orion_model.fields.OrionCharField(blank=True, help_text="Sorting type's associated color. Example 'Green'", max_length=1024),
        ),
        migrations.CreateModel(
            name='WasteTransaction',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='w4t_waste_collection.Transaction')),
            ],
            options={
                'abstract': False,
            },
            bases=('w4t_waste_collection.transaction',),
        ),
        migrations.DeleteModel(
            name='WasteManagementStage',
        ),
        migrations.AddField(
            model_name='sortingtype',
            name='resourcecollection_ptr',
            field=models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='w4t_waste_collection.ResourceCollection'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='waste',
            name='resource_ptr',
            field=models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='w4t_waste_collection.Resource'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='wastecategory',
            name='resourcecategory_ptr',
            field=models.OneToOneField(auto_created=True, default='', on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='w4t_waste_collection.ResourceCategory'),
            preserve_default=False,
        ),
    ]
